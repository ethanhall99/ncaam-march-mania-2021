RankingSystems <- MMasseyOrdinals %>%
filter(SystemName == "NET" |
SystemName == "TRP")
View(RankingSystems)
dRankingSystems <- MMasseyOrdinals %>%
filter(Season >= 2017) %>%
distinct(MMasseyOrdinals, SystemName)
dRankingSystems <- MMasseyOrdinals %>%
filter(Season >= 2017) %>%
distinct(SystemName)
View(dRankingSystems)
# Filter for past 5 seasons
MRegularSeasonDetailedResults1721 <- MRegularSeasonDetailedResults %>%
filter(Season >= minSeason)
# Global Variable
minSeason <- 2017
# Filter for past 5 seasons
MRegularSeasonDetailedResults1721 <- MRegularSeasonDetailedResults %>%
filter(Season >= minSeason)
# Distinct Ranking Systems in chosen years
dRankingSystems <- MMasseyOrdinals %>%
filter(Season >= minSeason) %>%
distinct(SystemName)
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName == c("NET", "TRP"))
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName == chosenRankings)
chosenRankings <- c("NET", "TRP")
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName == chosenRankings)
View(RankingSystems)
NET_rankings <- RankingSystems %>%
filter(SystemName == "NET")
TRP_rankings <- RankingSystems %>%
filter(SystemName == "TRP")
View(NET_rankings)
View(TRP_rankings)
View(TeamsConferences)
View(MTeams)
View(MTeamConferences)
MTeamConferences1721 <- MTeamConferences %>%
filter(Season >= minSeason)
View(MTeamConferences1721)
# Join team and conference table
TC <- left_join(MTeamConferences1721, Conferences, by = c("ConfAbbrev" = "ConfAbbrev"))
TeamsConferences <- left_join(TC, MTeams, by = c("TeamID" = "TeamID")) %>%
select(Season, TeamID, TeamName, Description, PowerFive, FirstD1Season, LastD1Season)
View(TeamsConferences)
source('~/Desktop/Data/ncaam-march-mania-2021/march_madness.R', echo=TRUE)
View(fMRegularSeasonDetailedResults)
View(fMTeamConferences)
colnames(fMRegularSeasonDetailedResults)
gameCols <- ("Season", "DayNum", "TeamID", "PF", "PA", "NumOT", "FGM", "FGA", "FGM3", "FGA3", "FTM", "FTA", "OR", "DR", "Ast", "TO", "Stl", "Blk", "PF")
gameWinner <- fMRegularSeasonDetailedResults %>%
select("Season", "DayNum", "WTeamID", "WScore", "LScore", "NumOT", "WFGM", "WFGA", "WFGM3", "WFGA3",
"WFTM", "WFTA", "WOR", "WDR", "WAst", "WTO", "WStl", "WBlk", "WPF")
gameLoser <- fMRegularSeasonDetailedResults %>%
select("Season", "DayNum", "LTeamID", "LScore", "WScore", "NumOT", "LFGM", "LFGA", "LFGM3", "LFGA3",
"LFTM", "LFTA", "LOR", "LDR", "LAst", "LTO", "LStl", "LBlk", "LPF")
View(gameLoser)
gameCols <- c("Season", "DayNum", "TeamID", "PF", "PA", "NumOT", "FGM", "FGA", "FGM3", "FGA3", "FTM", "FTA", "OR", "DR", "Ast", "TO", "Stl", "Blk", "PF")
gameCols <- c("Season", "DayNum", "TeamID", "PF", "PA", "NumOT", "FGM", "FGA", "FGM3", "FGA3", "FTM", "FTA", "OR", "DR", "Ast", "TO", "Stl", "Blk", "Fouls")
gameWinner <- fMRegularSeasonDetailedResults %>%
select("Season", "DayNum", "WTeamID", "WScore", "LScore", "NumOT", "WFGM", "WFGA", "WFGM3", "WFGA3",
"WFTM", "WFTA", "WOR", "WDR", "WAst", "WTO", "WStl", "WBlk", "WPF") %>%
lapply(gameCols, colnames)
colnames(gameWinner) <- gameCols
View(gameWinner)
colnames(gameLoser) <- gameCols
library(tidyr)
library(tidyverse)
# game stats for winning team
gameWinner <- fMRegularSeasonDetailedResults %>%
select("Season", "DayNum", "WTeamID", "WScore", "LScore", "NumOT", "WFGM", "WFGA", "WFGM3", "WFGA3",
"WFTM", "WFTA", "WOR", "WDR", "WAst", "WTO", "WStl", "WBlk", "WPF") %>%
add_column(WinLoss = 1, .before = "WScore")
gameCols <- c("Season", "DayNum", "TeamID", "WinLoss", "PF", "PA", "NumOT", "FGM", "FGA", "FGM3", "FGA3", "FTM", "FTA",
"OR", "DR", "Ast", "TO", "Stl", "Blk", "Fouls")
# game stats for winning team
gameWinner <- fMRegularSeasonDetailedResults %>%
select("Season", "DayNum", "WTeamID", "WScore", "LScore", "NumOT", "WFGM", "WFGA", "WFGM3", "WFGA3",
"WFTM", "WFTA", "WOR", "WDR", "WAst", "WTO", "WStl", "WBlk", "WPF") %>%
add_column(WinLoss = 1, .before = "WScore")
colnames(gameWinner) <- gameCols
# game stats for losing team
gameLoser <- fMRegularSeasonDetailedResults %>%
select("Season", "DayNum", "LTeamID", "LScore", "WScore", "NumOT", "LFGM", "LFGA", "LFGM3", "LFGA3",
"LFTM", "LFTA", "LOR", "LDR", "LAst", "LTO", "LStl", "LBlk", "LPF") %>%
add_column(WinLoss = 0, .before = "LScore")
colnames(gameLoser) <- gameCols
games <- bind_rows(gameWinner, gameLoser)
View(games)
transmute(Wins = count(games$WinLoss == 1),
Loss = count(games$WinLoss == 0))
seasonStats2021 <- games %>%
group_by(Season, TeamID) %>%
transmute(Wins = count(games$WinLoss == 1),
Loss = count(games$WinLoss == 0))
seasonStats2021 <- games %>%
group_by(Season, TeamID) %>%
summarise(Wins = count(games$WinLoss == 1),
Loss = count(games$WinLoss == 0))
seasonStats2021 <- games %>%
group_by(Season, TeamID) %>%
summarise(Wins = n(games$WinLoss == 1),
Loss = n(games$WinLoss == 0))
seasonStats2021 <- games %>%
group_by(Season, TeamID) %>%
summarise(Wins = sum(games$WinLoss == 1),
Loss = sum(games$WinLoss == 0))
View(seasonStats2021)
seasonStats2021 <- games %>%
group_by(TeamID, Season) %>%
summarise(Wins = sum(games$WinLoss == 1),
Loss = sum(games$WinLoss == 0))
seasonStats2021 <- games %>%
group_by(TeamID) %>%
summarise(Wins = sum(games$WinLoss == 1),
Loss = sum(games$WinLoss == 0))
View(seasonStats2021)
seasonStats2021 <- games %>%
group_by(TeamID) %>%
summarise(Wins = sum(WinLoss == 1),
Loss = sum(WinLoss == 0))
seasonStats2021 <- games %>%
group_by(TeamID) %>%
summarise(Wins = sum(WinLoss == 1),
Loss = sum(WinLoss == 0),
avgPF = mean(PF),
avgPA = mean(PA))
seasonStats2021 <- games %>%
group_by(TeamID) %>%
summarise(Wins = sum(WinLoss == 1),
Loss = sum(WinLoss == 0),
PF = mean(PF),
PA = mean(PA),
"FG%" = sum(FGM)/sum(FGA),
FGM = sum(FGM),
FGA = sum(FGA))
seasonStats2021 <- games %>%
group_by(TeamID) %>%
summarise(Wins = sum(WinLoss == 1),
Loss = sum(WinLoss == 0),
PF = mean(PF),
PA = mean(PA),
"FG%" = sum(FGM)/sum(FGA)*100,
FGM = sum(FGM),
FGA = sum(FGA))
gameCols <- c("Season", "DayNum", "TeamID", "WinLoss", "PF", "PA", "NumOT", "FGM", "FGA", "3P", "3PA", "FTM", "FTA",
"OR", "DR", "Ast", "TO", "Stl", "Blk", "Fouls")
# game stats for winning team
gameWinner <- fMRegularSeasonDetailedResults %>%
select("Season", "DayNum", "WTeamID", "WScore", "LScore", "NumOT", "WFGM", "WFGA", "WFGM3", "WFGA3",
"WFTM", "WFTA", "WOR", "WDR", "WAst", "WTO", "WStl", "WBlk", "WPF") %>%
add_column(WinLoss = 1, .before = "WScore")
colnames(gameWinner) <- gameCols
# game stats for losing team
gameLoser <- fMRegularSeasonDetailedResults %>%
select("Season", "DayNum", "LTeamID", "LScore", "WScore", "NumOT", "LFGM", "LFGA", "LFGM3", "LFGA3",
"LFTM", "LFTA", "LOR", "LDR", "LAst", "LTO", "LStl", "LBlk", "LPF") %>%
add_column(WinLoss = 0, .before = "LScore")
colnames(gameLoser) <- gameCols
# Combine Win and Loss
games <- bind_rows(gameWinner, gameLoser)
seasonStats2021 <- games %>%
group_by(TeamID) %>%
summarise(Wins = sum(WinLoss == 1),
Loss = sum(WinLoss == 0),
PF = mean(PF),
PA = mean(PA),
"FG%" = sum(FGM)/sum(FGA)*100,
FGM = sum(FGM),
FGA = sum(FGA))
seasonStats2021 <- games %>%
group_by(TeamID) %>%
summarise(Wins = sum(WinLoss == 1),
Loss = sum(WinLoss == 0),
PF = mean(PF),
PA = mean(PA),
FGPct = sum(FGM)/sum(FGA)*100,
FGM = sum(FGM),
FGA = sum(FGA),
FG3Pct = sum(FGM3)/sum(FGA3)*100,
FGM3 = sum(FGM3),
FGA3 = sum(FGA3),
FTPct = sum(FTM)/sum(FTA)*100,
FTM = sum(FTM),
FTA = sum(FTA))
gameCols <- c("Season", "DayNum", "TeamID", "WinLoss", "PF", "PA", "NumOT", "FGM", "FGA", "FGM3", "FGA3", "FTM", "FTA",
"OR", "DR", "Ast", "TO", "Stl", "Blk", "Fouls")
# game stats for winning team
gameWinner <- fMRegularSeasonDetailedResults %>%
select("Season", "DayNum", "WTeamID", "WScore", "LScore", "NumOT", "WFGM", "WFGA", "WFGM3", "WFGA3",
"WFTM", "WFTA", "WOR", "WDR", "WAst", "WTO", "WStl", "WBlk", "WPF") %>%
add_column(WinLoss = 1, .before = "WScore")
colnames(gameWinner) <- gameCols
# game stats for losing team
gameLoser <- fMRegularSeasonDetailedResults %>%
select("Season", "DayNum", "LTeamID", "LScore", "WScore", "NumOT", "LFGM", "LFGA", "LFGM3", "LFGA3",
"LFTM", "LFTA", "LOR", "LDR", "LAst", "LTO", "LStl", "LBlk", "LPF") %>%
add_column(WinLoss = 0, .before = "LScore")
colnames(gameLoser) <- gameCols
# Combine Win and Loss
games <- bind_rows(gameWinner, gameLoser)
seasonStats2021 <- games %>%
group_by(TeamID) %>%
summarise(Wins = sum(WinLoss == 1),
Loss = sum(WinLoss == 0),
PF = mean(PF),
PA = mean(PA),
FGPct = sum(FGM)/sum(FGA)*100,
FGM = sum(FGM),
FGA = sum(FGA),
FG3Pct = sum(FGM3)/sum(FGA3)*100,
FGM3 = sum(FGM3),
FGA3 = sum(FGA3),
FTPct = sum(FTM)/sum(FTA)*100,
FTM = sum(FTM),
FTA = sum(FTA))
seasonStats2021 <- games %>%
group_by(TeamID) %>%
summarise(Wins = sum(WinLoss == 1),
Loss = sum(WinLoss == 0),
PF = mean(PF),
PA = mean(PA),
FGPct = sum(FGM)/sum(FGA)*100,
FGM = sum(FGM),
FGA = sum(FGA),
FG3Pct = sum(FGM3)/sum(FGA3)*100,
FGM3 = sum(FGM3),
FGA3 = sum(FGA3),
FTPct = sum(FTM)/sum(FTA)*100,
FTM = sum(FTM),
FTA = sum(FTA),
Reb = mean(OR)+mean(DR),
OReb = mean(OR),
DReb = mean(DR),
Ast = mean(Ast),
TO = mean(TO),
Stl = mean(Stl),
Blk = mean(Blk),
Fouls = mean(Fouls))
seasonStats2021 <- games %>%
group_by(TeamID) %>%
summarise(Wins = sum(WinLoss == 1),
Loss = sum(WinLoss == 0),
PF = mean(PF),
PA = mean(PA),
FGPct = sum(FGM)/sum(FGA)*100,
FGM = sum(FGM),
FGA = sum(FGA),
FG3Pct = sum(FGM3)/sum(FGA3)*100,
FGM3 = sum(FGM3),
FGA3 = sum(FGA3),
FTPct = sum(FTM)/sum(FTA)*100,
FTM = sum(FTM),
FTA = sum(FTA),
Reb = mean(OR)+mean(DR),
OReb = mean(OR),
DReb = mean(DR),
Ast = mean(Ast),
TO = mean(TO),
Stl = mean(Stl),
Blk = mean(Blk))
View(fMRegularSeasonDetailedResults)
View(TeamsConferences)
TeamsConferences <- left_join(TC, MTeams, by = c("TeamID" = "TeamID")) %>%
select(TeamID, TeamName, Description, PowerFive)
# Filter seasons
fMRegularSeasonDetailedResults <- left_join(MRegularSeasonDetailedResults, TeamsConferences, by = c("TeamID" = "TeamID")) %>%
filter(Season >= minSeason)
View(games)
gameDetails <- left_join(TeamsConferences, games, by = c("TeamID" = "TeamID"))
View(gameDetails)
seasonStats2021 <- gameDetails %>%
group_by(TeamID, TeamName, Description, PowerFive) %>%
summarise(Wins = sum(WinLoss == 1),
Loss = sum(WinLoss == 0),
PF = mean(PF),
PA = mean(PA),
FGPct = sum(FGM)/sum(FGA)*100,
FGM = sum(FGM),
FGA = sum(FGA),
FG3Pct = sum(FGM3)/sum(FGA3)*100,
FGM3 = sum(FGM3),
FGA3 = sum(FGA3),
FTPct = sum(FTM)/sum(FTA)*100,
FTM = sum(FTM),
FTA = sum(FTA),
Reb = mean(OR)+mean(DR),
OReb = mean(OR),
DReb = mean(DR),
Ast = mean(Ast),
TO = mean(TO),
Stl = mean(Stl),
Blk = mean(Blk))
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName == chosenRankingSystems)
View(RankingSystems)
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName == chosenRankingSystems,
Season >= minSeason)
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName == chosenRankingSystems,
Season >= minSeason) %>%
select(-Season)
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName == chosenRankingSystems,
Season >= minSeason) %>%
select(-Season, OrdinalRank)
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName == chosenRankingSystems,
Season >= minSeason) %>%
select(-Season, OrdinalRank)
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName == chosenRankingSystems,
Season >= minSeason) %>%
select(-Season) %>%
mutate(weekRank = dense_rank(desc(-c(RankingDayNum, OrdinalRank))))
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName == chosenRankingSystems,
Season >= minSeason) %>%
select(-Season) %>%
mutate(weekRank = dense_rank(desc()))
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName == chosenRankingSystems,
Season >= minSeason) %>%
select(-Season) %>%
mutate(weekRank = dense_rank(desc(-RankingDayNum))))
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName == chosenRankingSystems,
Season >= minSeason) %>%
select(-Season) %>%
mutate(weekRank = dense_rank(desc(-RankingDayNum)))
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName == chosenRankingSystems,
Season >= minSeason) %>%
select(-Season)
write.table(RankingSystems, file = "/Users/ethanhall/Downloads/rankingSystems.csv",
row.names = FALSE, sep = ",")
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName == chosenRankingSystems,
Season >= minSeason) %>%
select(-Season) %>%
mutate(weekRank = dense_rank(desc(-RankingDayNum)))
NET_rankings <- RankingSystems %>%
filter(SystemName == "NET")
View(NET_rankings)
FinalRankings <- RankingSystems %>%
filter(weekRank = max(weekRank))
FinalRankings <- RankingSystems %>%
filter(weekRank == max(weekRank))
View(FinalRankings)
seasonStats2021 <- gameDetails %>%
group_by(TeamID, TeamName, Description, PowerFive) %>%
summarise(Wins = sum(WinLoss == 1),
Loss = sum(WinLoss == 0),
PF = mean(PF),
PA = mean(PA),
FGPct = sum(FGM)/sum(FGA)*100,
FGM = sum(FGM),
FGA = sum(FGA),
FG3Pct = sum(FGM3)/sum(FGA3)*100,
FGM3 = sum(FGM3),
FGA3 = sum(FGA3),
FTPct = sum(FTM)/sum(FTA)*100,
FTM = sum(FTM),
FTA = sum(FTA),
Reb = mean(OR)+mean(DR),
OReb = mean(OR),
DReb = mean(DR),
Ast = mean(Ast),
TO = mean(TO),
Stl = mean(Stl),
Blk = mean(Blk)) %>%
mutate(NET = FinalRankings$OrdinalRank[FinalRankings$SystemName == "NET"])
FinalRankings <- RankingSystems %>%
filter(weekRank == max(weekRank)) %>%
select(-weekRank) %>%
pivot_wider(names_from = SystemName, values_from = OrdinalRank)
View(MMasseyOrdinals)
Gonzaga <- MMasseyOrdinals %>%
filter(TeamID == 1211)
View(Gonzaga)
Gonzaga <- MMasseyOrdinals %>%
filter(Season == 2021,
TeamID == 1211)
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName == "NET" | SystemName == "POM" | SystemName == "TRP",
Season >= minSeason) %>%
select(-Season) %>%
mutate(weekRank = dense_rank(desc(-RankingDayNum)))
FinalRankings <- RankingSystems %>%
filter(weekRank == max(weekRank)) %>%
select(-weekRank) %>%
pivot_wider(names_from = SystemName, values_from = OrdinalRank)
seasonStats2021 <- gameDetails %>%
group_by(TeamID, TeamName, Description, PowerFive) %>%
summarise(Wins = sum(WinLoss == 1),
Loss = sum(WinLoss == 0),
PF = mean(PF),
PA = mean(PA),
FGPct = sum(FGM)/sum(FGA)*100,
FGM = sum(FGM),
FGA = sum(FGA),
FG3Pct = sum(FGM3)/sum(FGA3)*100,
FGM3 = sum(FGM3),
FGA3 = sum(FGA3),
FTPct = sum(FTM)/sum(FTA)*100,
FTM = sum(FTM),
FTA = sum(FTA),
Reb = mean(OR)+mean(DR),
OReb = mean(OR),
DReb = mean(DR),
Ast = mean(Ast),
TO = mean(TO),
Stl = mean(Stl),
Blk = mean(Blk)) %>%
TeamStatsNRankings <- left_join(seasonStats2021, FinalRankings, by = c("TeamID" = "TeamID"))
seasonStats2021 <- gameDetails %>%
group_by(TeamID, TeamName, Description, PowerFive) %>%
summarise(Wins = sum(WinLoss == 1),
Loss = sum(WinLoss == 0),
PF = mean(PF),
PA = mean(PA),
FGPct = sum(FGM)/sum(FGA)*100,
FGM = sum(FGM),
FGA = sum(FGA),
FG3Pct = sum(FGM3)/sum(FGA3)*100,
FGM3 = sum(FGM3),
FGA3 = sum(FGA3),
FTPct = sum(FTM)/sum(FTA)*100,
FTM = sum(FTM),
FTA = sum(FTA),
Reb = mean(OR)+mean(DR),
OReb = mean(OR),
DReb = mean(DR),
Ast = mean(Ast),
TO = mean(TO),
Stl = mean(Stl),
Blk = mean(Blk))
TeamStatsNRankings <- left_join(seasonStats2021, FinalRankings, by = c("TeamID" = "TeamID"))
View(TeamStatsNRankings)
View(FinalRankings)
FinalRankings <- RankingSystems %>%
filter(weekRank == max(weekRank)) %>%
select(-one_of(c("weekRank"))) %>%
pivot_wider(names_from = SystemName, values_from = OrdinalRank)
FinalRankings <- RankingSystems %>%
filter(weekRank == max(weekRank)) %>%
select(-one_of(c("weekRank", "RankingDayNum"))) %>%
pivot_wider(names_from = SystemName, values_from = OrdinalRank)
source('~/Desktop/Data/ncaam-march-mania-2021/march_madness.R', echo=TRUE)
View(TeamStatsNRankings)
# Global Variable
minSeason <- 2021
chosenRankingSystems <- c("NET", "TRP", "POM")
# Create list of file paths for CSVs
base_path <- "/Users/ethanhall/Desktop/Data/ncaam-march-mania-2021/MDataFiles_Stage2"
base_path_len <- nchar(base_path)
files <- list.files(path = base_path, pattern = "*.csv", full.names = TRUE)
# Read all CSVs into data frames
for (i in files) {
v1 <- substr(i, base_path_len+2, nchar(i))
name <- substr(v1, 1, nchar(v1)-4)
assign(name, data.frame(read_csv(i, col_names = TRUE)))
}
# Filter seasons
fMRegularSeasonDetailedResults <- MRegularSeasonDetailedResults %>%
filter(Season >= minSeason)
fMTeamConferences <- MTeamConferences %>%
filter(Season >= minSeason)
# Join team and conference table
TC <- left_join(fMTeamConferences, Conferences, by = c("ConfAbbrev" = "ConfAbbrev"))
TeamsConferences <- left_join(TC, MTeams, by = c("TeamID" = "TeamID")) %>%
select(TeamID, TeamName, Description, PowerFive)
# Distinct Ranking Systems in chosen years
dRankingSystems <- MMasseyOrdinals %>%
filter(Season >= minSeason) %>%
distinct(SystemName)
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName == one_of(chosenRankingSystems),
Season >= minSeason) %>%
select(-Season) %>%
mutate(weekRank = dense_rank(desc(-RankingDayNum)))
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName %in% chosenRankingSystems,
Season >= minSeason) %>%
select(-Season) %>%
mutate(weekRank = dense_rank(desc(-RankingDayNum)))
source('~/Desktop/Data/ncaam-march-mania-2021/march_madness.R', echo=TRUE)
View(TeamStatsNRankings)
source('~/Desktop/Data/ncaam-march-mania-2021/march_madness.R', echo=TRUE)
write.table(TeamStatsNRankings, file = "/Users/ethanhall/Desktop/Data/ncaam-march-mania-2021/teamStatsRankings.csv",
row.names = FALSE, sep = ",")
