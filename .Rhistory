FTPct = sum(FTM)/sum(FTA)*100,
FTM = mean(FTM),
FTA = mean(FTA),
Reb = mean(OR)+mean(DR),
OReb = mean(OR),
DReb = mean(DR),
Ast = mean(Ast),
TO = mean(TO),
Stl = mean(Stl),
Blk = mean(Blk))
x <- min(df$WeekNum)
while (x <= max(df$WeekNum)) {
holder <- df %>%
filter(WeekNum <= x) %>%
group_by(TeamID, TeamName, Description, PowerFive, Season) %>%
summarise(WeekNum = x,
GP = n(),
PF = mean(PF),
PA = mean(PA),
FGPct = sum(FGM)/sum(FGA)*100,
FGM = mean(FGM),
FGA = mean(FGA),
FG3Pct = sum(FGM3)/sum(FGA3)*100,
FGM3 = mean(FGM3),
FGA3 = mean(FGA3),
FTPct = sum(FTM)/sum(FTA)*100,
FTM = mean(FTM),
FTA = mean(FTA),
Reb = mean(OR)+mean(DR),
OReb = mean(OR),
DReb = mean(DR),
Ast = mean(Ast),
TO = mean(TO),
Stl = mean(Stl),
Blk = mean(Blk))
weekly_stats <- rbind(holder, weekly_stats)
x = x + 1
}
View(weekly_stats)
weekly_stats <- data.frame()
while (x <= max(df$WeekNum)) {
holder <- df %>%
filter(WeekNum <= x) %>%
group_by(TeamID, TeamName, Description, PowerFive, Season) %>%
summarise(WeekNum = x,
GP = n(),
PF = mean(PF),
PA = mean(PA),
FGPct = sum(FGM)/sum(FGA)*100,
FGM = mean(FGM),
FGA = mean(FGA),
FG3Pct = sum(FGM3)/sum(FGA3)*100,
FGM3 = mean(FGM3),
FGA3 = mean(FGA3),
FTPct = sum(FTM)/sum(FTA)*100,
FTM = mean(FTM),
FTA = mean(FTA),
Reb = mean(OR)+mean(DR),
OReb = mean(OR),
DReb = mean(DR),
Ast = mean(Ast),
TO = mean(TO),
Stl = mean(Stl),
Blk = mean(Blk))
weekly_stats <- rbind(holder, weekly_stats)
x = x + 1
}
weekly_stats <- data.frame()
while (x <= max(df$WeekNum)) {
holder <- df %>%
filter(WeekNum <= x) %>%
group_by(TeamID, TeamName, Description, PowerFive, Season) %>%
summarise(WeekNum = x,
GP = n(),
PF = mean(PF),
PA = mean(PA),
FGPct = sum(FGM)/sum(FGA)*100,
FGM = mean(FGM),
FGA = mean(FGA),
FG3Pct = sum(FGM3)/sum(FGA3)*100,
FGM3 = mean(FGM3),
FGA3 = mean(FGA3),
FTPct = sum(FTM)/sum(FTA)*100,
FTM = mean(FTM),
FTA = mean(FTA),
Reb = mean(OR)+mean(DR),
OReb = mean(OR),
DReb = mean(DR),
Ast = mean(Ast),
TO = mean(TO),
Stl = mean(Stl),
Blk = mean(Blk))
weekly_stats <- bind_rows(weekly_stats, holder)
x = x + 1
}
View(weekly_stats)
x <- min(df$WeekNum)
weekly_stats <- data.frame()
while (x <= max(df$WeekNum)) {
holder <- df %>%
filter(WeekNum <= x) %>%
group_by(TeamID, TeamName, Description, PowerFive, Season) %>%
summarise(WeekNum = x,
GP = n(),
PF = mean(PF),
PA = mean(PA),
FGPct = sum(FGM)/sum(FGA)*100,
FGM = mean(FGM),
FGA = mean(FGA),
FG3Pct = sum(FGM3)/sum(FGA3)*100,
FGM3 = mean(FGM3),
FGA3 = mean(FGA3),
FTPct = sum(FTM)/sum(FTA)*100,
FTM = mean(FTM),
FTA = mean(FTA),
Reb = mean(OR)+mean(DR),
OReb = mean(OR),
DReb = mean(DR),
Ast = mean(Ast),
TO = mean(TO),
Stl = mean(Stl),
Blk = mean(Blk))
weekly_stats <- bind_rows(weekly_stats, holder)
x = x + 1
}
## Aggregate game data
# Add Week Number
df <- gameDetails %>%
mutate(WeekNum = ceiling(DayNum/7)) %>%
move_columns(WeekNum, .before = DayNum)
x <- min(df$WeekNum)
weekly_stats <- data.frame()
while (x <= max(df$WeekNum)) {
holder <- df %>%
filter(WeekNum <= x) %>%
group_by(TeamID, TeamName, Description, PowerFive, Season) %>%
summarise(WeekNum = x,
GP = n(),
PF = mean(PF),
PA = mean(PA),
FGPct = sum(FGM)/sum(FGA)*100,
FGM = mean(FGM),
FGA = mean(FGA),
FG3Pct = sum(FGM3)/sum(FGA3)*100,
FGM3 = mean(FGM3),
FGA3 = mean(FGA3),
FTPct = sum(FTM)/sum(FTA)*100,
FTM = mean(FTM),
FTA = mean(FTA),
Reb = mean(OR)+mean(DR),
OReb = mean(OR),
DReb = mean(DR),
Ast = mean(Ast),
TO = mean(TO),
Stl = mean(Stl),
Blk = mean(Blk))
weekly_stats <- bind_rows(weekly_stats, holder)
x = x + 1
}
View(weekly_stats)
# aggregate stats from games played prior to that week
x <- min(df$WeekNum)
weekly_stats <- data.frame()
while (x <= max(df$WeekNum)) {
holder <- df %>%
filter(WeekNum <= x) %>%
group_by(TeamID, TeamName, Description, PowerFive, Season) %>%
summarise(WeekNum = x,
StatsWeekNum = x-1,
GP = n(),
PF = mean(PF),
PA = mean(PA),
FGPct = sum(FGM)/sum(FGA)*100,
FGM = mean(FGM),
FGA = mean(FGA),
FG3Pct = sum(FGM3)/sum(FGA3)*100,
FGM3 = mean(FGM3),
FGA3 = mean(FGA3),
FTPct = sum(FTM)/sum(FTA)*100,
FTM = mean(FTM),
FTA = mean(FTA),
Reb = mean(OR)+mean(DR),
OReb = mean(OR),
DReb = mean(DR),
Ast = mean(Ast),
TO = mean(TO),
Stl = mean(Stl),
Blk = mean(Blk))
weekly_stats <- bind_rows(weekly_stats, holder)
x = x + 1
}
View(fMRegularSeasonDetailedResults)
# know matchups
matchups <- fMRegularSeasonDetailedResults %>%
select(DayNum, WTeamID, LTeamID)
View(matchups)
View(gameDetails)
View(cross_Teams)
# know matchups
matchups <- fMRegularSeasonDetailedResults %>%
select(DayNum, WTeamID, LTeamID) %>%
mutate(WeekNum = ceiling(DayNum/7)) %>%
move_columns(WeekNum, .before = DayNum)
# know matchups
matchups <- fMRegularSeasonDetailedResults %>%
select(DayNum, WTeamID, LTeamID) %>%
mutate(WeekNum = ceiling(DayNum/7)) %>%
move_columns(WeekNum, .before = DayNum) %>%
select(WeekNum, WTeamID, LTeamID)
gameCols <- c("Season", "DayNum", "TeamID", "OppTeamID", "WinLoss", "PF", "PA", "NumOT", "FGM", "FGA", "FGM3", "FGA3", "FTM", "FTA",
"OR", "DR", "Ast", "TO", "Stl", "Blk", "Fouls")
# game stats for winning team
gameWinner <- fMRegularSeasonDetailedResults %>%
select("Season", "DayNum", "WTeamID", "LTeamID", "WScore", "LScore", "NumOT", "WFGM", "WFGA", "WFGM3", "WFGA3",
"WFTM", "WFTA", "WOR", "WDR", "WAst", "WTO", "WStl", "WBlk", "WPF") %>%
add_column(WinLoss = 1, .before = "WScore")
colnames(gameWinner) <- gameCols
# game stats for losing team
gameLoser <- fMRegularSeasonDetailedResults %>%
select("Season", "DayNum", "LTeamID", "WTeamID", "LScore", "WScore", "NumOT", "LFGM", "LFGA", "LFGM3", "LFGA3",
"LFTM", "LFTA", "LOR", "LDR", "LAst", "LTO", "LStl", "LBlk", "LPF") %>%
add_column(WinLoss = 0, .before = "LScore")
colnames(gameLoser) <- gameCols
# Combine Win and Loss
games <- bind_rows(gameWinner, gameLoser)
gameDetails <- left_join(TeamsConferences, games, by = c("TeamID" = "TeamID"))
gameDetails <- left_join(TeamsConferences, games, by = c("TeamID" = "TeamID")) %>%
mutate(WeekNum = ceiling(DayNum/7)) %>%
move_columns(WeekNum, .before = DayNum)
# know matchups
matchups <- gameDetails %>%
select(WinLoss, WeekNum, TeamID, OppTeamID)
View(weekly_stats)
drop_cols <- c('TeamName', 'Description', 'OppTeamName', 'OppDescription')
cross_Teams <- cross_Teams %>%
filter(TeamID != OppTeamID) %>%
select(-drop_cols)
# aggregate stats from games played prior to that week
x <- min(df$WeekNum)
weekly_stats <- data.frame()
while (x <= max(df$WeekNum)) {
holder <- gameDetails %>%
filter(WeekNum <= x) %>%
group_by(TeamID, TeamName, Description, PowerFive, Season) %>%
summarise(WeekNum = x,
StatsWeekNum = x+1,
GP = n(),
PF = mean(PF),
PA = mean(PA),
FGPct = sum(FGM)/sum(FGA)*100,
FGM = mean(FGM),
FGA = mean(FGA),
FG3Pct = sum(FGM3)/sum(FGA3)*100,
FGM3 = mean(FGM3),
FGA3 = mean(FGA3),
FTPct = sum(FTM)/sum(FTA)*100,
FTM = mean(FTM),
FTA = mean(FTA),
Reb = mean(OR)+mean(DR),
OReb = mean(OR),
DReb = mean(DR),
Ast = mean(Ast),
TO = mean(TO),
Stl = mean(Stl),
Blk = mean(Blk))
weekly_stats <- bind_rows(weekly_stats, holder)
x = x + 1
}
# Join winning team data
matchups <- matchups %>%
inner_join(matchups, weekly_stats, by = c("WeekNum" = "StatsWeekNum", "TeamID" = "TeamID"))
# Join winning team data
matchups <- matchups %>%
inner_join(matchups, weekly_stats, by = c("WeekNum" = "StatsWeekNum", "TeamID" = "TeamID"))
# Join winning team data
matchups <- matchups %>%
inner_join(matchups, weekly_stats, by = c("TeamID" = "TeamID", "WeekNum" = "StatsWeekNum"))
# Join winning team data
matchups <- inner_join(matchups, weekly_stats, by = c("TeamID" = "TeamID", "WeekNum" = "StatsWeekNum"))
# know matchups
matchups <- gameDetails %>%
select(WinLoss, WeekNum, TeamID, OppTeamID)
# know matchups
matchups <- gameDetails %>%
select(WinLoss, WeekNum, TeamID, OppTeamID) %>%
filter(WeekNum > 4)
# Join winning team data
matchups <- inner_join(matchups, weekly_stats, by = c("TeamID" = "TeamID", "WeekNum" = "StatsWeekNum"))
# know matchups
matchups <- gameDetails %>%
select(WinLoss, WeekNum, TeamID, OppTeamID)
# Join winning team data
matchups <- left_join(matchups, weekly_stats, by = c("TeamID" = "TeamID", "WeekNum" = "StatsWeekNum"))
# Join winning team data
matchups <- inner_join(matchups, weekly_stats, by = c("TeamID" = "TeamID", "WeekNum" = "StatsWeekNum"))
# know matchups
matchups <- gameDetails %>%
select(WinLoss, WeekNum, TeamID, OppTeamID)
# Join winning team data
matchups <- inner_join(matchups, weekly_stats, by = c("TeamID" = "TeamID", "WeekNum" = "StatsWeekNum"))
opp_weekly_stats <- weekly_stats
colnames(opp_weekly_stats) <- paste("Opp", colnames(opp_weekly_stats), sep = "")
View(opp_weekly_stats)
weekly_stats <- weekly_stats %>%
select(c('TeamName', 'Description', 'WeekNum'))
# aggregate stats from games played prior to that week
x <- min(df$WeekNum)
weekly_stats <- data.frame()
while (x <= max(df$WeekNum)) {
holder <- gameDetails %>%
filter(WeekNum <= x) %>%
group_by(TeamID, TeamName, Description, PowerFive, Season) %>%
summarise(WeekNum = x,
StatsWeekNum = x+1,
GP = n(),
PF = mean(PF),
PA = mean(PA),
FGPct = sum(FGM)/sum(FGA)*100,
FGM = mean(FGM),
FGA = mean(FGA),
FG3Pct = sum(FGM3)/sum(FGA3)*100,
FGM3 = mean(FGM3),
FGA3 = mean(FGA3),
FTPct = sum(FTM)/sum(FTA)*100,
FTM = mean(FTM),
FTA = mean(FTA),
Reb = mean(OR)+mean(DR),
OReb = mean(OR),
DReb = mean(DR),
Ast = mean(Ast),
TO = mean(TO),
Stl = mean(Stl),
Blk = mean(Blk))
weekly_stats <- bind_rows(weekly_stats, holder)
x = x + 1
}
weekly_stats <- weekly_stats %>%
select(-c('TeamName', 'Description', 'WeekNum'))
# aggregate stats from games played prior to that week
x <- min(df$WeekNum)
weekly_stats <- data.frame()
while (x <= max(df$WeekNum)) {
holder <- gameDetails %>%
filter(WeekNum <= x) %>%
group_by(TeamID, TeamName, Description, PowerFive, Season) %>%
summarise(WeekNum = x,
StatsWeekNum = x+1,
GP = n(),
PF = mean(PF),
PA = mean(PA),
FGPct = sum(FGM)/sum(FGA)*100,
FGM = mean(FGM),
FGA = mean(FGA),
FG3Pct = sum(FGM3)/sum(FGA3)*100,
FGM3 = mean(FGM3),
FGA3 = mean(FGA3),
FTPct = sum(FTM)/sum(FTA)*100,
FTM = mean(FTM),
FTA = mean(FTA),
Reb = mean(OR)+mean(DR),
OReb = mean(OR),
DReb = mean(DR),
Ast = mean(Ast),
TO = mean(TO),
Stl = mean(Stl),
Blk = mean(Blk))
weekly_stats <- bind_rows(weekly_stats, holder)
x = x + 1
}
weekly_stats <- weekly_stats %>%
select(-c('TeamName', 'Description', 'WeekNum', 'Season'))
opp_weekly_stats <- weekly_stats
colnames(opp_weekly_stats) <- paste("Opp", colnames(opp_weekly_stats), sep = "")
# know matchups
matchups <- gameDetails %>%
select(WinLoss, WeekNum, TeamID, OppTeamID)
# Join winning team data
matchups <- inner_join(matchups, weekly_stats, by = c("TeamID" = "TeamID", "WeekNum" = "StatsWeekNum"))
View(cross_Teams)
matchups <- inner_join(matchups, opp_weekly_stats, by = c("OppTeamID" = "OppTeamID", "WeekNum" = "OppStatsWeekNum"))
View(RankingSystems)
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName %in% chosenRankingSystems,
Season >= minSeason) %>%
select(-Season) %>%
mutate(RankingWeekNum = ceiling(DayNum/7)) %>%
move_columns(WeekNum, .before = RankingDayNum)
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName %in% chosenRankingSystems,
Season >= minSeason) %>%
select(-Season) %>%
mutate(RankingWeekNum = ceiling(RankingDayNum/7)) %>%
move_columns(WeekNum, .before = RankingDayNum)
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName %in% chosenRankingSystems,
Season >= minSeason) %>%
select(-Season) %>%
mutate(RankingWeekNum = ceiling(RankingDayNum/7)) %>%
move_columns(RankingWeekNum, .before = RankingDayNum)
FinalRankings <- RankingSystems %>%
filter(weekRank == max(RankingWeekNum)) %>%
select(-one_of(c("weekRank", "RankingDayNum"))) %>%
pivot_wider(names_from = SystemName, values_from = OrdinalRank)
FinalRankings <- RankingSystems %>%
filter(weekRank == max(RankingWeekNum)) %>%
select(-one_of(c("RankingWeekNum", "RankingDayNum"))) %>%
pivot_wider(names_from = SystemName, values_from = OrdinalRank)
FinalRankings <- RankingSystems %>%
filter(RankingWeekNum == max(RankingWeekNum)) %>%
select(-one_of(c("RankingWeekNum", "RankingDayNum"))) %>%
pivot_wider(names_from = SystemName, values_from = OrdinalRank)
View(FinalRankings)
FinalRankings <- RankingSystems %>%
filter(RankingWeekNum == max(RankingWeekNum)) %>%
select(-c("RankingDayNum")) %>%
pivot_wider(names_from = SystemName, values_from = OrdinalRank)
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName %in% chosenRankingSystems,
Season >= minSeason) %>%
select(-Season) %>%
mutate(weekRank = dense_rank(desc(-RankingDayNum)))
FinalRankings <- RankingSystems %>%
filter(weekRank == max(weekRank)) %>%
select(-one_of(c("weekRank", "RankingDayNum"))) %>%
pivot_wider(names_from = SystemName, values_from = OrdinalRank)
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName %in% chosenRankingSystems,
Season >= minSeason) %>%
select(-Season) %>%
mutate(weekRank = dense_rank(desc(-RankingDayNum))) %>%
mutate(RankingWeekNum = ceiling(RankingDayNum/7))
d_RankingSystems <- MMasseyOrdinals %>%
filter(Season >= minSeason) %>%
distinct(RankingDayNum)
View(d_RankingSystems)
View(gameDetails)
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName %in% chosenRankingSystems,
Season >= minSeason,
RankingDayNum < max(RankingDayNum)) %>%
select(-Season) %>%
mutate(RankingWeekNum = ceiling(RankingDayNum/7)) %>%
move_columns(RankingWeekNum, .before = RankingDayNum)
FinalRankings <- RankingSystems %>%
filter(RankingWeekNum == max(RankingWeekNum)) %>%
select(-c("RankingDayNum")) %>%
pivot_wider(names_from = SystemName, values_from = OrdinalRank)
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName %in% chosenRankingSystems,
Season >= minSeason) %>%
select(-Season) %>%
mutate(weekRank = dense_rank(desc(-RankingDayNum)))
FinalRankings <- RankingSystems %>%
filter(weekRank == max(weekRank)) %>%
select(-one_of(c("weekRank", "RankingDayNum"))) %>%
pivot_wider(names_from = SystemName, values_from = OrdinalRank)
# Filter to chosen ranking systems
FinalRankings <- MMasseyOrdinals %>%
filter(SystemName %in% chosenRankingSystems,
Season >= minSeason) %>%
select(-Season) %>%
mutate(weekRank = dense_rank(desc(-RankingDayNum)))
FinalRankings <- FinalRankings %>%
filter(weekRank == max(weekRank)) %>%
select(-one_of(c("weekRank", "RankingDayNum"))) %>%
pivot_wider(names_from = SystemName, values_from = OrdinalRank)
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName %in% chosenRankingSystems,
Season >= minSeason,
RankingDayNum , max(RankingDayNum)) %>%
select(-Season) %>%
mutate(RankingWeekNum = ceiling(RankingDayNum/7)) %>%
move_columns(RankingWeekNum, .before = RankingDayNum)
View(FinalRankings)
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName %in% chosenRankingSystems,
Season >= minSeason,
RankingDayNum , max(RankingDayNum)) %>%
select(-Season) %>%
mutate(RankingWeekNum = ceiling(RankingDayNum/7)) %>%
move_columns(RankingWeekNum, .before = RankingDayNum) %>%
select(-"RankingDayNum") %>%
pivot_wider(names_from = SystemName, values_from = OrdinalRank)
# Filter to chosen ranking systems
RankingSystems <- MMasseyOrdinals %>%
filter(SystemName %in% chosenRankingSystems,
Season >= minSeason,
RankingDayNum < max(RankingDayNum)) %>%
select(-Season) %>%
mutate(RankingWeekNum = ceiling(RankingDayNum/7)) %>%
move_columns(RankingWeekNum, .before = RankingDayNum) %>%
select(-"RankingDayNum") %>%
pivot_wider(names_from = SystemName, values_from = OrdinalRank)
View(MMasseyOrdinals)
help <- MMasseyOrdinals %>%
filter(Season >= minSeason) %>%
select(-Season) %>%
pivot_wider(names_from = SystemName, values_from = OrdinalRank)
View(help)
lapply(help,function(x) { length(which(is.na(x)))})
nullRank <- lapply(help,function(x) { length(which(is.na(x)))})
View(nullRank)
View(matchups)
